<?php
/** @var $block Magento\Framework\View\Element\Template */
/** @var Scommerce\TrackingBase\ViewModel\TrackingDataContainer $viewModel */
$viewModel = $block->getData('view_model');
if (!$viewModel->isEnabled()) {
    return;
}
$productToBasket = $viewModel->getProductToBasket();
$productToWishlist = $viewModel->getProductToWishlist();
$skipPageReady = $block->getSkipPageReady();
?>
<script>
    require([
        "jquery",
        "scTrackingData",
        "mage/url",
        "mage/translate",
    ], function($, Tracking, url) {
        let tracking = Tracking();
        let scUpdating = false, scClicked = false;

        function _gaAddToCart($) {
            if (scClicked === false) return;
            if (scUpdating === true) return;
            scUpdating = true;
            $.ajax({
                url: url.build('sctracking/index/addtocart'),
                type: 'get',
                dataType: 'json',
                success: function(product) {
                    if (product == null) return;
                    for (let i = 0; i < product.length; i++) {
                        product[i].list = tracking.getProductImpression(product[i].allSkus);
                    }
                    tracking.setAddToCart(product);
                    $.ajax({
                        url: url.build('sctracking/index/unsaddtocart'),
                        type: 'POST',
                        data: {product},
                        dataType: 'json'
                    }).done(function(response) {
                    });
                }
            }).always(function() {
                scUpdating = false;
                scClicked = false;
            });
        }

        $(document).on('ajax:addToCart', function (e, data) {
            scClicked = true;
            _gaAddToCart($);
        });

        tracking.setPageType('<?php echo $viewModel->getPageType($block) ?>');
        tracking.setSendFullList('<?php echo $viewModel->getSendFullList() ?>');
        tracking.setSendDefaultList('<?php echo $viewModel->getSendDefaultList() ?>');
        tracking.setDefaultList('<?php echo $viewModel->getDefaultList() ?>');
        tracking.setCurrency('<?php echo $viewModel->getCurrency() ?>');
        tracking.setData('isGuest', <?php echo $viewModel->isGuest() ?>);

        <?php if ($productToBasket): ?>
        let cartData = <?php echo json_encode($productToBasket) ?>;
        <?php if (!isset($productToBasket[0]['list'])): ?>
        for (let i = 0; i < cartData.length; i++) {
            let impression = tracking.getProductImpression(cartData[i].allSkus);
            cartData[i].list = impression;
            tracking.sendQuoteImpression(cartData[i]['_realProductId'], impression);
        }
        <?php endif; ?>
        tracking.setAddToCart(cartData);
        <?php endif; ?>

        <?php if ($viewModel->getProductOutBasket()): ?>
        tracking.setRemoveFromCart(<?php echo $viewModel->getProductOutBasket() ?>);
        <?php endif; ?>

        <?php if ($productToWishlist): ?>
        let wishlistData = <?php echo json_encode($productToWishlist) ?>;
        wishlistData.item.list = tracking.getProductImpression(wishlistData.item.allSkus);
        tracking.setAddToWishlist(wishlistData);
        <?php else: ?>
        $('a.towishlist').click(function () {
            var wishlistData = $(this).data('post');
            var itemId = wishlistData.data.product;
            setTimeout(function () {
                $.ajax({
                    url: url.build('sctracking/index/addtowishlist'),
                    type: 'post',
                    dataType: 'json',
                    data: {itemId: itemId}
                }).success(function (product) {
                    if (product == null) return;
                    tracking.setAddToWishlist(product);
                });
            }, 1000);
        });
        <?php endif; ?>

        $(document).on('click', 'a', function(e) {
            let href = $(this).attr('href');
            let product = tracking.findProductByUrl(href);
            if (product !== undefined && product != false) {
                tracking.setProductImpression(product.id, product.list);
                tracking.fire('item_click', product);
            }
        });

        let promotions = [];
        let intCtr = 0;
        $(document).ready(function () {
            $('a[data-promotion]').each(function () {
                if ($(this).data("id") != undefined) {
                    $(this).addClass('sc-in-view-promo' + $(this).data("id"));
                }
            })
        });

        $(window).bind("scroll load", function () {
            $('a[data-promotion]').each(function () {
                selector = 'sc-in-view-promo' + $(this).data("id");
                promoEl = $('.' + selector);
                if (promoEl.isInViewport() && !promoEl.hasClass('sc-promo-sent')) {
                    promotions = [];
                    let id = $(this).data("id");
                    let name = $(this).data("name");
                    let creative = $(this).data("creative");
                    let position = $(this).data("position");
                    let slot = $(this).data("slot");
                    let promotion = {
                        'id': id,                         // Name or ID is required.
                        'name': name,
                        'creative': creative,
                        'position': position,
                        'slot': slot
                    };
                    promotions.push(promotion);
                    $(this).addClass('sc-promo-sent');
                    intCtr++;

                    $(this).click(function (e) {
                        promotion.href = $(this).attr('href');
                        tracking.fire('promo_click', promotion);
                    });

                    if (intCtr > 0) {
                        tracking.setPromotions(promotions);
                        intCtr = 0;
                    }
                }
            });
        });

        $.fn.isInViewport = function() {
            if ($(this).offset() != undefined) {
                var elementTop = $(this).offset().top;
                var elementBottom = elementTop + $(this).outerHeight();

                var viewportTop = $(window).scrollTop();
                var viewportBottom = viewportTop + $(window).height();

                return elementBottom > viewportTop && elementTop < viewportBottom;
            }
            return false;
        };

        <?php if (!$skipPageReady): ?>
        $(document).ready(function() {
            tracking.fire('page_ready', tracking.getPageType()?.toLowerCase() || "");
        });
        <?php endif; ?>
    });
</script>
